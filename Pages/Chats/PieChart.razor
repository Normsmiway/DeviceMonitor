@page "/PieChart"
@using ChartJs.Blazor.Charts
@using ChartJs.Blazor.ChartJS.PieChart
@using ChartJs.Blazor.ChartJS.Common.Properties
@using ChartJs.Blazor.Util



<h3>PieChart</h3>
<ChartJsPieChart @ref="_pieChartJs" Config="@_config" Width="400" Height="200" />
<br />
<hr />
@code {
    private PieConfig _config;
    private ChartJsPieChart _pieChartJs;
    [Parameter]
    public int UpCount { get; set; }
    [Parameter]
    public int DownCount { get; set; }
    [Parameter]
    public int OtherCount { get; set; }
    protected override void OnInitialized()
    {

        _config = new PieConfig
        {
            Options = new PieOptions
            {
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Performace Chat (Per set )"
                },
                Responsive = true,
                Animation = new ArcAnimation
                {
                    AnimateRotate = true,
                    AnimateScale = true
                }
            }
        };

        _config.Data.Labels.AddRange(new[] { "Up Count", "Down Count", "Supervising" });

        var pieSet = new PieDataset
        {
            //-Yellow
            BackgroundColor = new[] { ColorUtil.ColorString(40, 167, 69), ColorUtil.ColorString(220, 53, 69), ColorUtil.ColorString(255, 193, 7) },
            BorderWidth = 0,
            HoverBackgroundColor = ColorUtil.RandomColorString(),
            HoverBorderColor = ColorUtil.RandomColorString(),
            HoverBorderWidth = 1,
            BorderColor = "#ffffff",
        };

        pieSet.Data.AddRange(new double[] { UpCount, DownCount, OtherCount });
        _config.Data.Datasets.Add(pieSet);
        StateHasChanged();
    }

    
}
